@visibility internal
@using StormGenerator.Models.GenModels
@constructor(Model model)

        #region equality
	@if(!model.IsStruct){
        public override bool Equals(object obj)
        {
            return Equals(obj as @model.Name);
        @}
    }
	  @{var keyfields = model.KeyFields.Any() ? model.KeyFields : model.Fields;}
	  @newline
        public bool Equals(@model.Name other)
        {
		@if(!model.IsStruct){
            if (other == null)
            {
                return false;
            @}
			@newline
  		}  
  @if(keyfields.Count == 1){
            return @keyfields[0].Name == other.@keyfields[0].Name;
  }
  else{
    @foreach(var field in keyfields){
      @if(field == keyfields[0]){
            return @field.Name == other.@field.Name
      }
	  else{
                && @field.Name == other.@field.Name@if(field == keyfields.Last()){;}
	  }
    } 
  }        
        }
	    @newline
        public override int GetHashCode()
        {
            unchecked
            {
  @if(keyfields.Count == 1){
                return @(keyfields[0].Name).GetHashCode();
  }
  else{
    @foreach(var field in keyfields){
      @if(field == keyfields[0]){
                int hash = @(field.Name).GetHashCode();
      }
	  else{
                hash = (hash * 397) ^ @(field.Name).GetHashCode();
	  }
    }
                return hash; 
  } 
            }
        }
        #endregion
