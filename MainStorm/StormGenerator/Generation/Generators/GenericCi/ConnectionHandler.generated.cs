//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StormGenerator.Generation.Generators.GenericCi
{
    using StormGenerator.Settings;
    using GenericCi;
    using System;
    using System.Text;
    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("SharpRazor", "1.0.0.0")]
    internal class ConnectionHandler : FileGenerator
    {
        #region constructor
        GenOptions options;

        public ConnectionHandler(GenOptions options)
        {
            this.options = options;
        }
        #endregion

        public override string FileName => "ConnectionHandler";

        public override string Execute()
        {
            WriteLiteral("namespace ");
            Write(options.OutputNamespace);
            WriteLiteral(Environment.NewLine);
            WriteLiteral("{");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    using System;");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    using System.Data;");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    using System.Data.Common;");
            WriteLiteral(Environment.NewLine);
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    ");
            Write(options.Visibility);
            WriteLiteral(" class ConnectionHandler : IDisposable");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    {");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        private readonly DbConnection connection;");
            WriteLiteral(Environment.NewLine);
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        public ConnectionHandler(DbConnection connection)");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        {");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("            if (connection.State != ConnectionState.Open)");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("            {");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("                connection.Open();");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("                this.connection = connection;");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("            }");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        }");
            WriteLiteral(Environment.NewLine);
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        public void Dispose()");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        {");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("            if (connection != null)");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("            {");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("                connection.Close();");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("            }");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        }");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    }");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("}");

            return ToString();
        }
    }
}
