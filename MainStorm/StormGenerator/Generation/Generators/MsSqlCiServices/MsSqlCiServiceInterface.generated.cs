//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StormGenerator.Generation.Generators.MsSqlCiServices
{
    using StormGenerator.Settings;
    using Storm.Interfaces;
    using System;
    using System.Text;
    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("SharpRazor", "1.0.0.0")]
    internal class MsSqlCiServiceInterface : FileGenerator
    {
        #region constructor
        GenOptions options;

        public MsSqlCiServiceInterface(GenOptions options)
        {
            this.options = options;
        }
        #endregion

        public override string FileName => "ICIService";

        public override string Execute()
        {
            WriteLiteral("namespace ");
            Write(options.OutputNamespace);
            WriteLiteral(Environment.NewLine);
            WriteLiteral("{");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    using System.Data.SqlClient;");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("	using System.Collections.Generic;");
            WriteLiteral(Environment.NewLine);
            if (!options.CiOnly)
            {
                WriteLiteral("    using ");
                Write(typeof(ILoadService<>).Namespace);
                WriteLiteral(";");
                WriteLiteral(Environment.NewLine);
            }
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    ");
            Write(options.Visibility);
            WriteLiteral(" interface ICiService<T>");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("    {");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("        List<T> Materialize(string query, ");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("                            SqlParameter[] parms, ");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("                            SqlConnection conn, ");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("                            SqlTransaction trans);");
            WriteLiteral(Environment.NewLine);
            if (!options.CiOnly)
            {
                WriteLiteral(Environment.NewLine);
                WriteLiteral("        List<T> Materialize(ILoadService<T> loadService,");
                WriteLiteral(Environment.NewLine);
                WriteLiteral("                            string query, ");
                WriteLiteral(Environment.NewLine);
                WriteLiteral("                            SqlParameter[] parms, ");
                WriteLiteral(Environment.NewLine);
                WriteLiteral("                            SqlConnection conn, ");
                WriteLiteral(Environment.NewLine);
                WriteLiteral("                            SqlTransaction trans);");
                WriteLiteral(Environment.NewLine);
            }
            WriteLiteral("    }");
            WriteLiteral(Environment.NewLine);
            WriteLiteral("}");
            WriteLiteral(Environment.NewLine);

            return ToString();
        }
    }
}
