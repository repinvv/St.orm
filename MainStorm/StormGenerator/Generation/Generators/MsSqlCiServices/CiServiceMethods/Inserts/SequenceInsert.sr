@visibility internal
@using StormGenerator.Settings StormGenerator.Models.GenModels GeneratorHelpers Request
@constructor(Model model, GenOptions options)

        public static int MaxAmountForGroupedInsert = @model.MaxAmountForSequenceGroupedInsert();

        public void Insert(List<@model.Name> entities, SqlConnection conn, SqlTransaction trans)
        {
            if(entities.Count > MaxAmountForGroupedInsert)
            {
                @{var type = @model.KeyFields[0].Column.CsTypeName;}
                var seq = CiHelper.GetSequenceValues<@type>("@model.KeyFields[0].Column.Sequence", entities.Count, conn, trans);
                for(var i = 0; i < entities.Count; i++)
                {
                    var entity = entities[i];
                    entity.@model.KeyFields[0].Name = seq++;
@if(model.IsStruct){
                    entities[i] = entity;
}
                }
                CiHelper.BulkInsert(new EntityDataReader(entities), "@model.Table.Id", conn, trans );
            }
            else
            {
                GroupInsert(entities, conn, trans);
            }
        }

@[SingleInsert(model)]

@{var fields = model.Fields;}
        #region group insert methods
@if(!model.IsStruct){
@[GroupInsertWithKey(model, options)]

@[ConstructRequestWithOutput(model, fields)]

@[SequenceInsertKeys(fields)]
} else{
@[GroupInsert(model, options)]

@[ConstructRequest(model, fields)]

@[SequenceInsertKeys(fields)]
}

@[InsertParameters(model, model.ValueFields())]
        #endregion
