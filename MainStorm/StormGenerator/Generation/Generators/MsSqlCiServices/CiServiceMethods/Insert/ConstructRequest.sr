@visibility internal
@using StormGenerator.Settings StormGenerator.Models.GenModels GeneratorHelpers 
@using System.Collections.Generic
@constructor(Model model, List<Field> fields, string output)

		private string insertRequestCache;
		private int insertCacheLength;

		private string ConstructInsertRequest(int count)
		{
		    if(insertCacheLength == count) return insertRequestCache;

		    var sb = new StringBuilder();
            sb.AppendLine("INSERT INTO @model.Table.Id");
			sb.AppendLine("(");
@foreach(var line in fields.GetSelectLines()){
            sb.AppendLine("@line");
}
            sb.AppendLine(")@output VALUES");

			AppendInsertKeys(sb, 0);
            for (int i = 1; i < count; i++)
            {
			    sb.AppendLine("), ");
				AppendInsertKeys(sb, i);
            }
			
			sb.AppendLine(")");
			insertCacheLength = count;
			return insertRequestCache = sb.ToString();
		}

		private void AppendInsertKeys(StringBuilder sb, int i)
		{
@{var i = 0; }
@foreach(var field in fields){
                sb.Append("@if(field != fields.First()){, }else{( }@@parm@(i++)i"); sb.Append(i);
}
        }
