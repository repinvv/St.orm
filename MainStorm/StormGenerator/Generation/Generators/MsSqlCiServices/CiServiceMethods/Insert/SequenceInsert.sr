@visibility internal
@using StormGenerator.Settings StormGenerator.Models.GenModels GeneratorHelpers
@constructor(Model model, GenOptions options)

@[EntityReader(model)]

        public static int MaxAmountForGroupedInsert = 12;

        public void Insert(List<@model.Name> entities, SqlConnection conn, SqlTransaction trans)
        {
            using (new ConnectionHandler(conn))
            {
			    if(entities.Count > MaxAmountForGroupedInsert)
				{
                    var seq = CiHelper.GetSequenceValues("@model.KeyFields[0].Column.Sequence", entities.Count, conn, trans);
                    entities.ForEach(x => x.@model.KeyFields[0].Name = (@model.KeyFields[0].Column.CsTypeName)(seq++));
					CiHelper.BulkInsert(new EntityDataReader(entities), "@model.Table.Id", conn, trans );
                }
				else
				{
				    RangeInsert(entities, conn, trans);
                }
            }
        }

@{var fields = model.Fields;}
		#region range insert methods
@if(!model.IsStruct){
@[RangeInsertWithKey(model, options)]

@[ConstructRequestWithOutput(model, fields)]

@[SequenceInsertKeys(fields)]
} else{
@[RangeInsert(model, options)]

@[ConstructRequest(model, fields)]

@[SequenceInsertKeys(fields)]
}

@[InsertParameters(model, model.ValueFields())]
		#endregion

@[SingleInsert(model)]