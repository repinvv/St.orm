//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StormTestProject.StormModel
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
	using System.Collections.Generic;

    public class EntityWithIdCiService : ICiService<EntityWithId>
    {
        public List<EntityWithId> Materialize(string query, 
                            SqlParameter[] parms, 
                            SqlConnection conn, 
                            SqlTransaction trans)
        {
            Func<SqlDataReader, List<EntityWithId>> func = reader =>
            {
                var list = new List<EntityWithId>();
                while (reader.Read())
                {
                    var entity = new EntityWithId();
                    PopulateFields(entity, reader);
                    list.Add(entity);
                }
                return list;
            };
            return CiHelper.ExecuteSelect(query, parms, func, conn, trans);
        }

        private void PopulateFields(EntityWithId entity, SqlDataReader reader)
        {
            entity.Id = reader.GetInt32(0);
            entity.ABigint = reader.IsDBNull(1) ? (long?)null : reader.GetInt64(1);
            entity.AInt = reader.GetInt32(2);
            entity.ANumeric = reader.IsDBNull(3) ? (decimal?)null : reader.GetDecimal(3);
            entity.ABit = reader.IsDBNull(4) ? (bool?)null : reader.GetBoolean(4);
            entity.ASmallint = reader.IsDBNull(5) ? (short?)null : reader.GetInt16(5);
            entity.ADecimal = reader.IsDBNull(6) ? (decimal?)null : reader.GetDecimal(6);
            entity.ASmallmoney = reader.IsDBNull(7) ? (decimal?)null : reader.GetDecimal(7);
            entity.ATinyint = reader.IsDBNull(8) ? (byte?)null : reader.GetByte(8);
            entity.AMoney = reader.IsDBNull(9) ? (decimal?)null : reader.GetDecimal(9);
        }
    }
}
