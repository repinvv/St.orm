//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StormTestProject
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;
    using St.Orm;
    using St.Orm.Interfaces;

    [Table("emp")]
    public partial class Emp
    {
        [Key]
        [Required]
        [MaxLength(9)]
        [Column("ssn", Order = 1)]
        public string Ssn { get;set; }

        [Key]
        [Required]
        [MaxLength(15)]
        [Column("client", Order = 2)]
        public string Client { get;set; }

        public virtual ICollection<EmpToDependent> EmpToDependents { get { return property0; } set { property0 = value; } }

        public virtual ICollection<EmpToDependent> EmpToDependents2 { get { return property1; } set { property1 = value; } }

        #region Private fields

        private readonly ILoadService loadService;
        private readonly Emp clonedFrom;
        private EmpToDependent field0;
        private EmpToDependent field1;

        #endregion

        #region Constructors

        public Emp(Emp clonedFrom)
        {
            this.clonedFrom = clonedFrom;
            this.loadService = clonedFrom.GetLoadService();
        }

        public Emp(ILoadService loadService)
        {
            this.loadService = loadService;
        }

        public Emp()
        {
            EmpToDependents = new HashSet<EmpToDependent>();
            EmpToDependents2 = new HashSet<EmpToDependent>();
        }

        public ILoadService GetLoadService()
        {
            return loadService;
        }

        #endregion

        #region Lazy properties

        private ICollection<EmpToDependent> property0 { get;set; }

        private ICollection<EmpToDependent> property1 { get;set; }

        #endregion
    }
}
