//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StormTestProject
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    [Table("StormTest.dbo.coverage")]
    public partial class Coverage
    {
        [Key]
        [Column("coverage_id", Order = 1)]
        public int CoverageId { get;set; }

        [Column("policy_id", Order = 2)]
        public int PolicyId { get;set; }

        [MaxLength(256)]
        [Column("comment", Order = 3)]
        public string Comment { get;set; }

        [Column("created", Order = 4)]
        public DateTime Created { get;set; }

        [Column("updated", Order = 5)]
        public DateTime Updated { get;set; }

        public virtual List<Department> Departments { get { return property0; } set { property0 = value; } }

        public virtual List<EligibilityGroup> EligibilityGroups { get { return property1; } set { property1 = value; } }

        public virtual List<Premium> Premiums { get { return property2; } set { property2 = value; } }

        public virtual List<Covered> Covereds { get { return property3; } set { property3 = value; } }

        #region Private fields

        private Coverage clonedFrom;
        private Department field0;
        private EligibilityGroup field1;
        private Premium field2;
        private Covered field3;

        #endregion

        #region Constructors

        public Coverage(Coverage clonedFrom)
        {
            this.clonedFrom = clonedFrom;
        }

        public Coverage() { }

        #endregion

        #region Lazy properties

        private List<Department> property0 { get;set; }

        private List<EligibilityGroup> property1 { get;set; }

        private List<Premium> property2 { get;set; }

        private List<Covered> property3 { get;set; }

        #endregion
    }
}
